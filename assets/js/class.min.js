var Class=function(a){return new _Class(a)},_Class=function(a){this.constructor=a.constructor;delete a.constructor;this.body=a};_Class.prototype.extend=function(a){if(this.extendClass)throw new Exception("A class can only extends once!!");this.extendClass=a;return this};_Class.prototype.implement=function(a){a.validate(this.body);return this};
_Class.prototype.create=function(){var a=this,b=function(){a.constructor&&a.constructor.apply(this,arguments);this.base=null};if(a.extendClass){b.prototype=a.extendClass.prototype;b.prototype.constructor=b;for(var c in this.body)b.prototype[c]=this.body[c]}else b.prototype=this.body;b.prototype.base=function(){a.extendClass&&a.extendClass.apply(this,arguments)};return b};
var Interface=function(a){return new _Interface(a)},_Interface=Class({constructor:function(a){this.interfaceBody=a},validate:function(a){var b=[],c;for(c in this.interfaceBody)a[c]||b.push("This class should implement "+c);if(0<b.length)throw new Exception(b.join("/n"));}}).create(),Exception=function(a){this.errorMessage=a};function namespace(a){for(var a=a.split("."),b=window,c="",d=0,e=a.length;d<e;d++)c=a[d],b[c]=b[c]||{},b=b[c];return b};